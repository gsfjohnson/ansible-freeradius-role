---

- name: copy files
  copy:
    src="{{item.src}}"
    dest="{{item.dest}}"
    owner={{item.owner|default(fr_owner)}}
    group={{item.group|default(fr_group)}}
    mode={{item.mode|default(fr_mode)}}
  with_items: "{{fr_copy_files}}"
  notify: svc restart fr 

- name: link files
  file:
    src="{{item.src}}"
    dest="{{item.dest}}"
    state=link
  with_items: "{{fr_link_files}}"
  notify: svc restart fr

- name: enable sites
  file:
    src="/etc/raddb/sites-available/{{item}}"
    dest="/etc/raddb/sites-enabled/{{item}}"
    state=link
  with_items: "{{fr_sites_enabled}}"
  notify: svc restart fr

- name: disable sites
  file:
    path="/etc/raddb/sites-enabled/{{item}}"
    state=absent
  with_items: "{{fr_sites_disabled}}"
  notify: svc restart fr

- name: include dictionaries
  lineinfile: >
    dest="/usr/share/freeradius/dictionary"
    insertafter="{{item.after}}"
    line="$INCLUDE {{item.name}}"
    state=present
  with_items: "{{fr_conf_dicts}}"
  notify: svc restart fr

- name: template proxy.conf
  template:
    src=proxy.conf.j2
    dest=/etc/raddb/proxy.conf
    owner={{fr_owner}}
    group={{fr_group}}
    mode={{fr_mode}}
  when: fr_conf_proxy is defined

- name: template clients.conf
  template:
    src=clients.conf.j2
    dest=/etc/raddb/clients.conf
    owner={{fr_owner}}
    group={{fr_group}}
    mode={{fr_mode}}
  when: fr_conf_clients is defined

- name: config sql modules
  template:
    src=sql-module.j2
    dest=/etc/raddb/modules/{{item.name}}
    owner={{fr_owner}}
    group={{fr_group}}
    mode={{fr_mode}}
  with_items: "{{fr_conf_sql}}"

- name: config ldap modules
  template:
    src=ldap-module.j2
    dest=/etc/raddb/modules/{{item.name}}
    owner={{fr_owner}}
    group={{fr_group}}
    mode={{fr_mode}}
  with_items: "{{fr_conf_ldap}}"

- name: config perl modules
  template:
    src=perl-module.j2
    dest=/etc/raddb/modules/{{item.name}}
    owner={{fr_owner}}
    group={{fr_group}}
    mode={{fr_mode}}
  with_items: "{{fr_conf_perl}}"

- name: config huntgroups
  template:
     src=huntgroups.j2
     dest=/etc/raddb/huntgroups
     owner={{fr_owner}}
     group={{fr_group}}
     mode={{fr_mode}}
  notify: svc restart fr
  when: fr_huntgroups|length > 0

- name: install certificate content
  copy:
    content: "{{item.content}}"
    dest: "/etc/raddb/certs/{{item.filename}}"
    owner: "{{fr_owner}}"
    group: "{{fr_group}}"
    mode: 0640
  with_items: "{{fr_certs}}"
  when: item.content is defined and item.cn is defined and (item.cn == '*' or item.cn == ansible_fqdn)
  notify: svc restart fr

- name: install certificate file
  copy:
    src: "{{item.file}}"
    dest: "/etc/raddb/certs/{{item.filename}}"
    owner: "{{fr_owner}}"
    group: "{{fr_group}}"
    mode: 0640
  with_items: "{{fr_certs}}"
  when: item.file is defined and item.cn is defined and (item.cn == '*' or item.cn == ansible_fqdn)
  notify: svc restart fr

- name: gist files
  get_url:
    url: "https://gist.githubusercontent.com/{{item.gist}}/raw"
    dest: "/etc/raddb/{{ item.dest }}"
    force: yes
    owner: "{{fr_owner}}"
    group: "{{fr_group}}"
    mode: "{{fr_mode}}"
  with_items: "{{fr_gist_files}}"
  notify: svc restart fr

- name: delete files
  file:
    path=/etc/raddb/{{item}}
    state=absent
  with_items: "{{fr_absent_files}}"

- name: gist scripts
  get_url:
    url: "https://gist.githubusercontent.com/{{item.gist}}/raw"
    dest: "/etc/raddb/{{ item.dest }}"
    force: yes
    owner: "{{fr_owner}}"
    group: "{{fr_group}}"
    mode: 0755
  with_items: "{{fr_gist_scripts}}"
  notify: svc restart fr

- name: service enable, start
  service:
    name={{fr_svc_name}}
    state={{fr_svc_state}}
    enabled={{fr_svc_enabled}}
    runlevel={{fr_svc_runlevel}}

